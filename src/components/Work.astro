---
import WorkImage from "@/components/WorkImage.astro";
import { workImages } from "@/data/workImages";

const gridPattern = [
  [2, 3, 3, 3, 3],
  [3, 3, 2],
  [3, 3, 3, 3],
  [1, 3, 3, 3],
  [3, 3, 3],
  [3, 3, 3],
];

const sharedClasses = "bg-foreground/8 rounded-xs overflow-hidden relative";

const patternClasses = {
  1: {
    container: `${sharedClasses} col-span-3 row-span-3 w-full h-full`,
    layout: "full-width",
    width: 2884,
    height: 1622,
  },
  2: {
    container: `${sharedClasses} w-full h-full col-span-2 row-span-2`,
    layout: "full-width",
    width: 2884,
    height: 1622,
  },
  3: {
    container: `${sharedClasses} aspect-video col-span-1 row-span-1`,
    layout: "constrained",
    width: 960,
    height: 540,
  },
};

const patternList = gridPattern.flat();

const selectedImages = workImages;
---

<h2 id="work-title" class="sr-only">Work</h2>
<section class="px-6 md:px-10 py-20" aria-labelledby="work-title">
  <div class="grid grid-cols-6 gap-2">
    {
      patternList.map((pattern, index) => {
        const image = selectedImages[index];
        const style = patternClasses[pattern as keyof typeof patternClasses];
        return (
          <div class={style.container} data-index={index}>
            <WorkImage
              src={`/src/assets/images/work/${image.src}`}
              layout={style.layout as "full-width" | "constrained"}
              alt={image.alt}
              width={style.width}
              height={style.height}
            />
            <div class="absolute inset-0 pointer-events-none border border-foreground mix-blend-multiply dark:mix-blend-screen opacity-5 dark:opacity-8" />
          </div>
        );
      })
    }
  </div>
</section>
